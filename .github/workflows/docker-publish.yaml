name: Docker-Publish

on:
  workflow_call:
    inputs:
      dockerFile:
        required: true
        type: string
      context:
        default: .
        type: string
      imageName:
        required: true
        type: string
      version:
        default: $(date +%s)
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Versioning
#      - name: Get version and version code
#        uses: xom9ikk/version-by-tag@v1
#        id: versioning
#        with:
#          isUseGithubRunNumber: true
#
#      - uses: actions-ecosystem/action-bump-semver@v1
#        id: bump-semver
#        with:
#          current_version: ${{ steps.versioning.outputs.semver }}
#          level: patch
#
#      - name: Print Variables
#        run: |
#          echo "Tag: ${{ steps.versioning.outputs.tag }}"
#          echo "Semver: ${{ steps.versioning.outputs.semver }}"
#          echo "Version code: ${{ steps.versioning.outputs.versionCode }}"
#          echo "New version: ${{ steps.bump-semver.outputs.new_version }}"

      #- name: Environment Printer
      #  uses: managedkaos/print-env@v1.0

      # Build Docker
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.9.1
        with:
          platforms: linux/arm64,linux/amd64

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          ecr: auto
          logout: true

      - name: docker pull cache image
        continue-on-error: true
        run: docker pull ${{ inputs.imageName }}:latest

      # Create Release
#      - name: Create Release
#        id: create_release
#        if: ${{ inputs.Enable_Release == 'true' }}
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
#        with:
#          tag_name: ${{ steps.bump-semver.outputs.new_version }}
#          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        if: ${{ inputs.Enable_Release == 'true' }}
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ runner.WORKSPACE }}/nupkgs/release.zip
#          asset_name: release.zip
#          asset_content_type: application/zip

      #Setup QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Build and Publish to Docker
      - name: Build the Docker image
        run: |
          docker buildx build ${{ inputs.context }} --file ${{ inputs.dockerFile }} \
            --tag ${{ inputs.imageName }}:${{ inputs.version }} \
            --tag ${{ inputs.imageName }}:latest \
            --cache-from=${{ inputs.imageName }}:latest \
            --push --platform=linux/arm64,linux/amd64