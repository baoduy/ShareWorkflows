name: Docker-Publish

on:
  workflow_call:
    inputs:
      dockerFile:
        required: true
        type: string
        description: The location of the Dockerfile.
      context:
        default: .
        type: string
        description: The context path of the project.
      platforms:
        default: linux/arm64,linux/amd64
        type: string
        description: The docker platforms parameter with default value is "linux/arm64 and linux/amd64".
      imageName:
        required: true
        type: string
        description: The name of the docker image.
      version:
        default: $(date +%s)
        type: string
        description: The version of the image with default value is current date-time.
      buildArgs:
        type: string
        description: Docker build arguments in the format "ARG1=value1,ARG2=value2".
      DOCKER_REGISTRY:
        default: docker.io
        type: string
        description: The registry image repository.
    secrets:
      DOCKER_USERNAME:
        required: true
        description: The docker hub user name.
      DOCKER_TOKEN:
        required: true
        description: The docker hub PAT token.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Build Docker
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.9.0
        with:
          platforms: ${{ inputs.platforms }}

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ inputs.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          ecr: auto
          logout: true

      #- name: docker pull cache image
      #  continue-on-error: true
      #  run: docker pull ${{ inputs.imageName }}:latest

      #Setup QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.4.0

      # Build and Publish to Docker
      - name: Build the Docker image
        run: |
          build_args=""
          if [ -n "${{ inputs.buildArgs }}" ]; then
            IFS=',' read -ra args <<< "${{ inputs.buildArgs }}"
            for arg in "${args[@]}"; do
              build_args+="--build-arg $arg "
            done
          fi

          docker buildx build ${{ inputs.context }} --file ${{ inputs.dockerFile }} \
            --tag ${{ inputs.imageName }}:${{ inputs.version }} \
            --tag ${{ inputs.imageName }}:latest \
            --cache-from=${{ inputs.imageName }}:latest \
            --push --platform=${{ inputs.platforms }} $build_args
